source .env
cast send --rpc-url $L1_RPC --legacy --cast-async --gas-price 150000000000 --private-key $DEPLOYER_PRIVATE_KEY $OptimismPortalProxy "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])" (1766847064778384329583297500742918515827483896875618958121606201292619776, "0x4200000000000000000000000000000000000007","0xc3987ba3f1f6d17a0a3cdcb2b6f07c2008a3233e", 1, 1303497, "d764ad0b00010000000000000000000000000000000000000000000000000000000000000000000000000000000000004200000000000000000000000000000000000010000000000000000000000000217ef911fedc17acac2e3d637917797725857486000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f424000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000a41635f5fd000000000000000000000000bc60a3ab1c9bd323c581d95e746a8e5c32ae56d5000000000000000000000000bc60a3ab1c9bd323c581d95e746a8e5c32ae56d500000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000") 27 ()

cast send CONTRACT_ADDRESS "updatePrices((address,uint256,uint256)[])" "[[ADDRESS,2000,2000],[ADDRESS,3000,3000]]" --rpc-url URL --private-key=P
cast send CONTRACT_ADDRESS "updatePrices((address,uint256,uint256)[])" "[(ADDR,100,200),(ADDR,300,400)]" --rpc-url RPC_URL --private-key=P_KEY

# 向 $L2StandardBridgeProxy 调用函数 withdraw
# proposer向L1链发布proposer(stateRoot, struct OutputProposal{xxx})
# 监听 L2ToL1MessagePasser 地址 MessagePassed(nonce, sender, target, value, gasLimit, data, withdrawHash)
# 调用L1的 OptimismPortal 合约 的 proveWithdrawalTransaction(xx), finalizeWithdrawalTransaction(xx)


